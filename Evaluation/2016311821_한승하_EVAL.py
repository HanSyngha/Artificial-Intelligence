# -*- coding: utf-8 -*-
"""accuracy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1030s_KcU4HsTxBhZTuByI9QA07JeT-UW
"""

from sklearn.metrics import confusion_matrix, precision_score, recall_score, f1_score, accuracy_score
import json

with open('./Evaluation.json') as json_file:
  data = json.load(json_file)
  y_pred = data["predict"]
  y_true = data["label"]

fd = open("2016311821_한승하_EVAL.txt",'w')
#confusion matrix
print('Confusion matrix',file = fd)
conf = confusion_matrix(y_true, y_pred)
for tup in conf:
  for num in tup:
    print(num,end="\t",file = fd)
  print("\n",file = fd)

# Accuracy
acc = "Accuracy : %.4f"%(accuracy_score(y_true,y_pred) * 100)
print(acc+"%",file = fd,end="\n\n")

# Precision
prec1 = "Macro averaging precision : %.4f"%(precision_score(y_true, y_pred, average='macro') * 100)
print(prec1+"%",file = fd)
prec2 = "Micro averaging precision : %.4f"%(precision_score(y_true, y_pred, average='micro') * 100)
print(prec2+"%",file = fd,end="\n\n")

# Recall
recal1 = "Macro averaging recall : %.4f"%(recall_score(y_true, y_pred, average='macro') * 100)
print(recal1 + "%",file = fd)
recal2 = "Micro averaging recall : %.4f"%(recall_score(y_true, y_pred, average='micro') * 100)
print(recal2 + "%",file = fd,end="\n\n")

# F1-score
F11 = "Macro averaging f1-score : %.4f"%(f1_score(y_true, y_pred, average='macro') * 100)
print(F11+"%",file = fd)
F12 = "Micro averaging f1-score : %.4f"%(f1_score(y_true, y_pred, average='micro') * 100)
print(F12+"%",file = fd)



